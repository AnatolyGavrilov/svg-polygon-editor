(()=>{var t={56:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},72:t=>{"use strict";var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var r={},i=[],a=0;a<t.length;a++){var l=t[a],c=o.base?l[0]+o.base:l[0],d=r[c]||0,h="".concat(c," ").concat(d);r[c]=d+1;var p=n(h),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var g=s(u,o);o.byIndex=a,e.splice(a,0,{identifier:h,updater:g,references:1})}i.push(h)}return i}function s(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,s){var r=o(t=t||[],s=s||{});return function(t){t=t||[];for(var i=0;i<r.length;i++){var a=n(r[i]);e[a].references--}for(var l=o(t,s),c=0;c<r.length;c++){var d=n(r[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}r=l}}},113:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},249:(t,e,n)=>{"use strict";n.d(e,{A:()=>a});var o=n(601),s=n.n(o),r=n(314),i=n.n(r)()(s());i.push([t.id,"* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  font-family: Arial, sans-serif;\n  background-color: #f5f5f5;\n  padding: 20px;\n}\n",""]);const a=i},314:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,s,r){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(i[l]=!0)}for(var c=0;c<t.length;c++){var d=[].concat(t[c]);o&&i[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),s&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=s):d[4]="".concat(s)),e.push(d))}},e}},374:()=>{const t=document.createElement("template");t.innerHTML='\n  <style>\n    :host {\n      display: block;\n      height: 100%;\n      width: 100%;\n      background-color: #f0f0f0;\n      position: relative;\n      overflow: hidden;\n    }\n    \n    .ticks {\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      width: 100%;\n    }\n    \n    .tick {\n      position: absolute;\n      left: 0;\n      height: 1px;\n      background-color: #333;\n    }\n    \n    .tick-label {\n      position: absolute;\n      left: 5px;\n      transform: translateY(-50%);\n      font-size: 10px;\n      color: #333;\n    }\n    \n    .major-tick {\n      width: 15px;\n    }\n    \n    .minor-tick {\n      width: 8px;\n    }\n  </style>\n  \n  <div class="ticks" id="ticks"></div>\n';class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(t.content.cloneNode(!0)),this.ticksContainer=this.shadowRoot.getElementById("ticks"),this.scale=1,this.offset=0}static get observedAttributes(){return["scale","offset"]}attributeChangedCallback(t,e,n){"scale"===t?(this.scale=parseFloat(n)||1,this.updateTicks()):"offset"===t&&(this.offset=parseFloat(n)||0,this.updateTicks())}updateTicks(){this.ticksContainer.innerHTML="";const t=this.getBoundingClientRect().height/this.scale,e=-this.offset/this.scale;let n=100;this.scale<.5&&(n=200),this.scale<.2&&(n=500),this.scale>2&&(n=50),this.scale>5&&(n=20);const o=n/5;for(let s=Math.ceil(e/n)*n;s<e+t;s+=o){const t=s%n===0,o=document.createElement("div");if(o.className="tick "+(t?"major-tick":"minor-tick"),o.style.top=(s-e)*this.scale+"px",this.ticksContainer.appendChild(o),t){const t=document.createElement("div");t.className="tick-label",t.textContent=s,t.style.top=(s-e)*this.scale+"px",this.ticksContainer.appendChild(t)}}}}customElements.define("ruler-y",e)},540:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},583:()=>{const t=document.createElement("template");t.innerHTML='\n  <style>\n    :host {\n      display: inline-block;\n      cursor: move;\n    }\n    \n    svg {\n      width: 100%;\n      height: 100%;\n    }\n    \n    :host([draggable]) {\n      cursor: grab;\n    }\n    \n    :host([draggable]:active) {\n      cursor: grabbing;\n    }\n  </style>\n  \n  <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">\n    <polygon fill="var(--polygon-color, #8B008B)" stroke="#333" stroke-width="1"></polygon>\n  </svg>\n';class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(t.content.cloneNode(!0)),this.polygon=this.shadowRoot.querySelector("polygon")}connectedCallback(){this.updatePolygon(),this.setupDragEvents()}static get observedAttributes(){return["points","color"]}attributeChangedCallback(t,e,n){"points"===t?this.updatePolygon():"color"===t&&this.style.setProperty("--polygon-color",n)}updatePolygon(){this.hasAttribute("points")&&this.polygon.setAttribute("points",this.getAttribute("points"))}setupDragEvents(){this.hasAttribute("draggable")&&(this.setAttribute("draggable","true"),this.addEventListener("dragstart",this.handleDragStart.bind(this)))}handleDragStart(t){const e=this.getBoundingClientRect();t.dataTransfer.setDragImage(this,e.width/2,e.height/2);const n=JSON.stringify({points:this.getAttribute("points"),color:this.getAttribute("color")});t.dataTransfer.setData("text/plain",n),t.dataTransfer.effectAllowed="copy"}}customElements.define("polygon-item",e)},601:t=>{"use strict";t.exports=function(t){return t[1]}},613:()=>{const t=document.createElement("template");t.innerHTML='\n  <style>\n    :host {\n      display: block;\n      height: 100%;\n      width: 100%;\n      background-color: #f0f0f0;\n      position: relative;\n      overflow: hidden;\n    }\n    \n    .ticks {\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 100%;\n      width: 100%;\n    }\n    \n    .tick {\n      position: absolute;\n      bottom: 0;\n      width: 1px;\n      background-color: #333;\n    }\n    \n    .tick-label {\n      position: absolute;\n      bottom: 5px;\n      transform: translateX(-50%);\n      font-size: 10px;\n      color: #333;\n    }\n    \n    .major-tick {\n      height: 15px;\n    }\n    \n    .minor-tick {\n      height: 8px;\n    }\n  </style>\n  \n  <div class="ticks" id="ticks"></div>\n';class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(t.content.cloneNode(!0)),this.ticksContainer=this.shadowRoot.getElementById("ticks"),this.scale=1,this.offset=0}static get observedAttributes(){return["scale","offset"]}attributeChangedCallback(t,e,n){"scale"===t?(this.scale=parseFloat(n)||1,this.updateTicks()):"offset"===t&&(this.offset=parseFloat(n)||0,this.updateTicks())}updateTicks(){this.ticksContainer.innerHTML="";const t=this.getBoundingClientRect().width/this.scale,e=-this.offset/this.scale;let n=100;this.scale<.5&&(n=200),this.scale<.2&&(n=500),this.scale>2&&(n=50),this.scale>5&&(n=20);const o=n/5;for(let s=Math.ceil(e/n)*n;s<e+t;s+=o){const t=s%n===0,o=document.createElement("div");if(o.className="tick "+(t?"major-tick":"minor-tick"),o.style.left=(s-e)*this.scale+"px",this.ticksContainer.appendChild(o),t){const t=document.createElement("div");t.className="tick-label",t.textContent=s,t.style.left=(s-e)*this.scale+"px",this.ticksContainer.appendChild(t)}}}}customElements.define("ruler-x",e)},659:t=>{"use strict";var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},825:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,s&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}}},e={};function n(o){var s=e[o];if(void 0!==s)return s.exports;var r=e[o]={id:o,exports:{}};return t[o](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{"use strict";var t=n(72),e=n.n(t),o=n(825),s=n.n(o),r=n(659),i=n.n(r),a=n(56),l=n.n(a),c=n(540),d=n.n(c),h=n(113),p=n.n(h),u=n(249),g={};function f(t,e,n){const o=e/2,s=n/2,r=.4*Math.min(e,n),i=[];for(let e=0;e<t;e++){const n=e/t*2*Math.PI,a=r*(.7+.3*Math.random()),l=o+a*Math.cos(n),c=s+a*Math.sin(n);i.push(`${l},${c}`)}return i.join(" ")}g.styleTagTransform=p(),g.setAttributes=l(),g.insert=i().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=d(),e()(u.A,g),u.A&&u.A.locals&&u.A.locals,n(583);const m=document.createElement("template");m.innerHTML='\n  <style>\n    :host {\n      display: block;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      padding: 15px;\n      margin-bottom: 20px;\n      min-height: 150px;\n      background-color: #f9f9f9;\n    }\n    \n    h2 {\n      margin-top: 0;\n      color: #333;\n    }\n    \n    .polygons-container {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 10px;\n    }\n  </style>\n  \n  <h2>Buffer Zone</h2>\n  <div class="polygons-container" id="container"></div>\n';class b extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(m.content.cloneNode(!0)),this.container=this.shadowRoot.getElementById("container")}generateRandomPolygons(){this.clear();const t=Math.floor(16*Math.random())+5;for(let e=0;e<t;e++){const t=document.createElement("polygon-item");t.setAttribute("draggable","true"),t.setAttribute("buffer","true");const e=f(Math.floor(5*Math.random())+3,50,50);t.setAttribute("points",e),t.style.width="100px",t.style.height="100px",this.container.appendChild(t)}}getPolygonsData(){return Array.from(this.container.querySelectorAll("polygon-item")).map((t=>({points:t.getAttribute("points"),color:t.getAttribute("color"),buffer:!0})))}setPolygonsData(t){this.clear(),t.forEach((t=>{if(t.buffer){const e=document.createElement("polygon-item");e.setAttribute("draggable","true"),e.setAttribute("buffer","true"),e.setAttribute("points",t.points),t.color&&e.setAttribute("color",t.color),e.style.width="100px",e.style.height="100px",this.container.appendChild(e)}}))}clear(){this.container.innerHTML=""}}customElements.define("buffer-zone",b),n(613),n(374);const y=document.createElement("template");y.innerHTML='\n  <style>\n    :host {\n      display: block;\n      position: relative;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      height: 500px;\n      overflow: hidden;\n      background-color: #fff;\n    }\n    \n    h2 {\n      margin-top: 0;\n      color: #333;\n      padding: 10px;\n      background-color: rgba(255, 255, 255, 0.8);\n      position: absolute;\n      top: 0;\n      left: 0;\n      z-index: 10;\n    }\n    \n    .workspace-content {\n      position: absolute;\n      transform-origin: 0 0;\n      will-change: transform;\n    }\n    \n    .ruler-x {\n      position: absolute;\n      top: 0;\n      left: 40px;\n      right: 0;\n      height: 40px;\n      z-index: 5;\n    }\n    \n    .ruler-y {\n      position: absolute;\n      top: 40px;\n      left: 0;\n      bottom: 0;\n      width: 40px;\n      z-index: 5;\n    }\n    \n    .polygons-container {\n      position: absolute;\n      top: 40px;\n      left: 40px;\n      right: 0;\n      bottom: 0;\n      overflow: hidden;\n      cursor: grab;\n    }\n\n    .polygons-container.grabbing {\n      cursor: grabbing;\n    }\n\n    .drop-indicator {\n      position: absolute;\n      pointer-events: none;\n      border: 2px dashed #8B008B;\n      background-color: rgba(76, 175, 80, 0.1);\n      z-index: 100;\n      display: none;\n    }\n  </style>\n  \n  <h2>Workspace</h2>\n  <div class="ruler-x">\n    <ruler-x></ruler-x>\n  </div>\n  <div class="ruler-y">\n    <ruler-y></ruler-y>\n  </div>\n  <div class="polygons-container" id="container">\n    <div class="workspace-content" id="content"></div>\n    <div class="drop-indicator" id="drop-indicator"></div>\n  </div>\n';class v extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(y.content.cloneNode(!0)),this.container=this.shadowRoot.getElementById("container"),this.content=this.shadowRoot.getElementById("content"),this.dropIndicator=this.shadowRoot.getElementById("drop-indicator"),this.scale=1,this.translateX=0,this.translateY=0,this.isDragging=!1,this.startX=0,this.startY=0,this.rulerX=this.shadowRoot.querySelector("ruler-x"),this.rulerY=this.shadowRoot.querySelector("ruler-y")}connectedCallback(){this.setupEventListeners(),this.updateTransform(),this.updateRulers()}setupEventListeners(){this.container.addEventListener("wheel",this.handleWheel.bind(this)),this.container.addEventListener("mousedown",this.handleMouseDown.bind(this)),document.addEventListener("mousemove",this.handleMouseMove.bind(this)),document.addEventListener("mouseup",this.handleMouseUp.bind(this)),this.addEventListener("dragenter",this.handleDragEnter.bind(this)),this.addEventListener("dragover",this.handleDragOver.bind(this)),this.addEventListener("dragleave",this.handleDragLeave.bind(this)),this.addEventListener("drop",this.handleDrop.bind(this))}handleDragEnter(t){t.preventDefault(),this.dropIndicator.style.display="block"}handleDragOver(t){t.preventDefault(),t.dataTransfer.dropEffect="copy";const e=100/this.scale,n=this.container.getBoundingClientRect(),o=(t.clientX-n.left-this.translateX)/this.scale,s=(t.clientY-n.top-this.translateY)/this.scale;this.dropIndicator.style.left=o-e/2+"px",this.dropIndicator.style.top=s-e/2+"px",this.dropIndicator.style.width=`${e}px`,this.dropIndicator.style.height=`${e}px`}handleDragLeave(t){t.preventDefault(),this.dropIndicator.style.display="none"}handleWheel(t){t.preventDefault();const e=t.deltaY>0?-.1:.1,n=Math.min(Math.max(.1,this.scale+e),3),o=t.clientX-this.container.getBoundingClientRect().left,s=t.clientY-this.container.getBoundingClientRect().top;this.translateX-=(o-this.translateX)*(n/this.scale-1),this.translateY-=(s-this.translateY)*(n/this.scale-1),this.scale=n,this.updateTransform(),this.updateRulers()}handleMouseDown(t){0===t.button&&!1===t.ctrlKey&&(this.isDragging=!0,this.startX=t.clientX-this.translateX,this.startY=t.clientY-this.translateY,this.container.classList.add("grabbing"),t.preventDefault())}handleMouseMove(t){this.isDragging&&(this.translateX=t.clientX-this.startX,this.translateY=t.clientY-this.startY,this.updateTransform(),this.updateRulers())}handleMouseUp(){this.isDragging=!1,this.container.classList.remove("grabbing")}handleDrop(t){t.preventDefault(),this.dropIndicator.style.display="none";const e=t.dataTransfer.getData("text/plain");if(e)try{const n=JSON.parse(e),o=this.container.getBoundingClientRect(),s=(t.clientX-o.left-this.translateX)/this.scale,r=(t.clientY-o.top-this.translateY)/this.scale,i=document.createElement("polygon-item");i.setAttribute("points",n.points),n.color&&i.setAttribute("color",n.color),i.style.position="absolute",i.style.left=`${s}px`,i.style.top=`${r}px`,i.style.width=100/this.scale+"px",i.style.height=100/this.scale+"px",this.content.appendChild(i)}catch(t){console.error("Error processing dropped polygon:",t)}}updateTransform(){this.content.style.transform=`translate(${this.translateX}px, ${this.translateY}px) scale(${this.scale})`}updateRulers(){this.rulerX.setAttribute("scale",this.scale.toString()),this.rulerX.setAttribute("offset",this.translateX.toString()),this.rulerY.setAttribute("scale",this.scale.toString()),this.rulerY.setAttribute("offset",this.translateY.toString())}getPolygonsData(){return Array.from(this.content.querySelectorAll("polygon-item")).map((t=>({points:t.getAttribute("points"),color:t.getAttribute("color"),left:t.style.left,top:t.style.top,buffer:!1})))}setPolygonsData(t){this.content.innerHTML="",t.forEach((t=>{if(!t.buffer){const e=document.createElement("polygon-item");e.setAttribute("points",t.points),t.color&&e.setAttribute("color",t.color),e.style.position="absolute",e.style.left=t.left,e.style.top=t.top,e.style.width=100/this.scale+"px",e.style.height=100/this.scale+"px",this.content.appendChild(e)}}))}getWorkspaceState(){return{scale:this.scale,translateX:this.translateX,translateY:this.translateY}}setWorkspaceState(t){this.scale=t.scale||1,this.translateX=t.translateX||0,this.translateY=t.translateY||0,this.updateTransform(),this.updateRulers()}clear(){this.content.innerHTML="",this.scale=1,this.translateX=0,this.translateY=0,this.updateTransform(),this.updateRulers()}}customElements.define("workspace-area",v);const x=document.createElement("template");x.innerHTML='\n  <style>\n    :host {\n      display: block;\n      font-family: Arial, sans-serif;\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n    \n    .header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 20px;\n    }\n    \n    .controls {\n      display: flex;\n      gap: 10px;\n    }\n    \n    button {\n      padding: 8px 16px;\n      background-color: #FF1493;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n    \n    button:hover {\n      background-color: #8B008B;\n    }\n    \n    button.reset {\n      background-color: #8B008B;\n    }\n    \n    button.reset:hover {\n      background-color: #8B008B;\n    }\n  </style>\n  \n  <div class="header">\n    <h1>SVG Polygon Editor</h1>\n    <div class="controls">\n      <button id="create-btn">Create</button>\n      <button id="save-btn">Save</button>\n      <button id="reset-btn" class="reset">Reset</button>\n    </div>\n  </div>\n  \n  <buffer-zone></buffer-zone>\n  <workspace-area></workspace-area>\n';class w extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(x.content.cloneNode(!0)),this.createBtn=this.shadowRoot.getElementById("create-btn"),this.saveBtn=this.shadowRoot.getElementById("save-btn"),this.resetBtn=this.shadowRoot.getElementById("reset-btn")}connectedCallback(){this.createBtn.addEventListener("click",(()=>this.createPolygons())),this.saveBtn.addEventListener("click",(()=>this.saveState())),this.resetBtn.addEventListener("click",(()=>this.resetState())),this.loadState()}createPolygons(){this.shadowRoot.querySelector("buffer-zone").generateRandomPolygons()}saveState(){const t=this.shadowRoot.querySelector("buffer-zone"),e=this.shadowRoot.querySelector("workspace-area");!function(t){try{return localStorage.setItem("svgPolygonEditor",JSON.stringify(t)),!0}catch(t){return console.error("Failed to save to localStorage:",t),!1}}({bufferPolygons:t.getPolygonsData(),workspacePolygons:e.getPolygonsData(),workspaceState:e.getWorkspaceState()}),alert("State saved to localStorage!")}loadState(){const t=function(){try{const t=localStorage.getItem("svgPolygonEditor");return t?JSON.parse(t):null}catch(t){return console.error("Failed to load from localStorage:",t),null}}();if(t){const e=this.shadowRoot.querySelector("buffer-zone"),n=this.shadowRoot.querySelector("workspace-area");e.setPolygonsData(t.bufferPolygons||[]),n.setPolygonsData(t.workspacePolygons||[]),n.setWorkspaceState(t.workspaceState||{})}}resetState(){if(confirm("Are you sure you want to reset all data?")){localStorage.removeItem("svgPolygonEditor");const t=this.shadowRoot.querySelector("buffer-zone"),e=this.shadowRoot.querySelector("workspace-area");t.clear(),e.clear()}}}customElements.define("app-root",w)})()})();